apiVersion: apps/v1
kind: Deployment
metadata:
  name: dts-system
  namespace: dts-system
  labels:
    app: distributed-timestamp-system
    version: v1.0.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: distributed-timestamp-system
  template:
    metadata:
      labels:
        app: distributed-timestamp-system
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/api/actuator/prometheus"
    spec:
      containers:
      - name: dts-system
        image: dts-system:1.0.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        - name: NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: CLUSTER_NAME
          value: "k8s-cluster"
        - name: MYSQL_HOST
          valueFrom:
            secretKeyRef:
              name: dts-secrets
              key: mysql-host
        - name: MYSQL_PORT
          valueFrom:
            secretKeyRef:
              name: dts-secrets
              key: mysql-port
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: dts-secrets
              key: mysql-database
        - name: MYSQL_USERNAME
          valueFrom:
            secretKeyRef:
              name: dts-secrets
              key: mysql-username
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: dts-secrets
              key: mysql-password
        - name: REDIS_HOST
          valueFrom:
            secretKeyRef:
              name: dts-secrets
              key: redis-host
        - name: REDIS_PORT
          valueFrom:
            secretKeyRef:
              name: dts-secrets
              key: redis-port
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: dts-secrets
              key: redis-password
        - name: NACOS_SERVER
          valueFrom:
            secretKeyRef:
              name: dts-secrets
              key: nacos-server
        - name: SEATA_SERVER
          valueFrom:
            secretKeyRef:
              name: dts-secrets
              key: seata-server
        - name: JAVA_OPTS
          value: "-Xms512m -Xmx1024m -XX:+UseG1GC -XX:MaxGCPauseMillis=200"
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
          readOnly: true
        - name: logs-volume
          mountPath: /app/logs
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/actuator/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/actuator/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /api/actuator/health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
      volumes:
      - name: config-volume
        configMap:
          name: dts-config
      - name: logs-volume
        emptyDir: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - distributed-timestamp-system
              topologyKey: kubernetes.io/hostname
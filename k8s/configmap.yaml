apiVersion: v1
kind: ConfigMap
metadata:
  name: dts-config
  namespace: dts-system
  labels:
    app: distributed-timestamp-system
data:
  application.yml: |
    server:
      port: 8080
      servlet:
        context-path: /api
    
    spring:
      application:
        name: distributed-timestamp-system
      
      profiles:
        active: prod
      
      datasource:
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://${MYSQL_HOST}:${MYSQL_PORT}/${MYSQL_DATABASE}?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
        username: ${MYSQL_USERNAME}
        password: ${MYSQL_PASSWORD}
        hikari:
          maximum-pool-size: 20
          minimum-idle: 5
          idle-timeout: 300000
          connection-timeout: 20000
          max-lifetime: 1200000
          leak-detection-threshold: 60000
      
      jpa:
        hibernate:
          ddl-auto: validate
        show-sql: false
        properties:
          hibernate:
            dialect: org.hibernate.dialect.MySQL8Dialect
            format_sql: true
            use_sql_comments: true
            jdbc:
              batch_size: 20
            order_inserts: true
            order_updates: true
      
      redis:
        host: ${REDIS_HOST}
        port: ${REDIS_PORT}
        password: ${REDIS_PASSWORD}
        database: 0
        timeout: 2000ms
        lettuce:
          pool:
            max-active: 20
            max-idle: 10
            min-idle: 5
            max-wait: 2000ms
      
      jackson:
        time-zone: Asia/Shanghai
        date-format: yyyy-MM-dd HH:mm:ss
        serialization:
          write-dates-as-timestamps: false
        deserialization:
          fail-on-unknown-properties: false
    
    # Seata配置
    seata:
      enabled: true
      application-id: ${spring.application.name}
      tx-service-group: dts-tx-group
      enable-auto-data-source-proxy: true
      data-source-proxy-mode: AT
      config:
        type: nacos
        nacos:
          server-addr: ${NACOS_SERVER}
          group: SEATA_GROUP
          namespace: seata
          username: nacos
          password: nacos
      registry:
        type: nacos
        nacos:
          application: seata-server
          server-addr: ${NACOS_SERVER}
          group: SEATA_GROUP
          namespace: seata
          username: nacos
          password: nacos
      service:
        vgroup-mapping:
          dts-tx-group: default
        grouplist:
          default: ${SEATA_SERVER}
    
    # 应用自定义配置
    dts:
      node:
        id: ${NODE_ID}
        cluster: ${CLUSTER_NAME}
      
      timestamp:
        lamport:
          sync-interval: 1000
          persistence-enabled: true
        vector:
          max-nodes: 100
          cleanup-interval: 3600000
        vector-clock:
          max-entries: 1000
          gc-threshold: 0.8
      
      transaction:
        timeout: 30000
        retry-count: 3
        rollback-timeout: 10000
    
    # 监控配置
    management:
      endpoints:
        web:
          exposure:
            include: health,info,metrics,prometheus
      endpoint:
        health:
          show-details: always
      metrics:
        export:
          prometheus:
            enabled: true
        tags:
          application: ${spring.application.name}
          node: ${dts.node.id}
    
    # 日志配置
    logging:
      level:
        com.example.dts: INFO
        org.springframework.transaction: WARN
        io.seata: INFO
      pattern:
        console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId}] %logger{36} - %msg%n"